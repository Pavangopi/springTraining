<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">
               
     <!-- <context:annotation-config/> -->
     
	  <context:component-scan base-package="com.spring.beans"></context:component-scan>

</beans>

<!--   <context:annotation-config> is used to activate annotations in beans already registered in the
    application context(no matter if they were defined with XML or by package scanning).
    
    <context:annotation-config/> only looks for annotations on beans in the same application context 
    in which it is defined. This means that, if you put <context:annotation-config/>
    in a WebApplicationContext for a DispatcherServlet, it only checks for @Autowired beans in your controllers,
    and not your services.
    
	<context:component-scan> can also do what <context:annotation-config> does but <context:component-scan> 
also scans packages to find and register beans within the application context. -->